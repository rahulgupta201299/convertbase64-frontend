{"version":3,"sources":["Axios.js","components/Main.js","components/redux/Json/Json-action.js","App.js","reportWebVitals.js","components/redux/Json/Json-reducer.js","components/redux/root-reducer.js","components/redux/store.js","index.js"],"names":["instance","axios","create","baseURL","connect","state","currentClick","user","currentJson","dispatch","useState","showButton","setShowButton","name","setName","click","SetClick","useEffect","Axios","get","then","res","console","log","data","upload","e","a","preventDefault","files","target","FormData","append","post","message","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","className","type","accept","onChange","onClick","JsonFileName","JsonData","payload","setJson","JSON","parse","responseType","response","Name","Date","now","Download","Swal","fire","icon","title","window","location","reload","catch","class","options","App","exact","path","component","Main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Initial_State","userReducer","action","persistConfig","key","storage","blacklist","whitelist","rootReducer","combineReducers","JsonReducer","persistReducer","middlewares","logger","store","createStore","applyMiddleware","persistStore","ReactDOM","render","document","getElementById"],"mappings":"+SAMeA,E,OAJAC,EAAMC,OAAO,CACxBC,QAAS,gD,oFCqGb,IAKeC,eALO,SAACC,GAAD,MAAU,CAC5BC,aAAcD,EAAME,KAAKD,aACzBE,YAAaH,EAAME,KAAKC,eAGW,KAAxBJ,EAnGf,YAAoD,IAArCK,EAAoC,EAApCA,SAASD,EAA2B,EAA3BA,YAAYF,EAAe,EAAfA,aAChC,EAAiCI,oBAAS,GAA1C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAuBF,mBAAS,IAAhC,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAyBJ,oBAAS,GAAlC,mBAAOK,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACNC,EAAMC,IAAI,YAAYC,MAAK,SAAAC,GACvBC,QAAQC,IAAIF,EAAIG,WAEtB,IAEF,IAAMC,EAAM,uCAAC,WAAOC,GAAP,iBAAAC,EAAA,sDACTD,EAAEE,iBACIC,EAAQH,EAAEI,OAAOD,MACvBP,QAAQC,IAAIM,EAAM,KACZL,EAAO,IAAIO,UACZC,OAAO,OAAOH,EAAM,IACzBX,EAAMe,KAAK,UAAUT,GAAMJ,MAAK,SAAAC,GAC5BC,QAAQC,IAAIF,EAAIG,KAAKU,SACrBtB,GAAc,GACdE,EAAQO,EAAIG,KAAKX,SATZ,2CAAD,sDAuDNsB,EAAiB,CACnBC,MAAM,EACNC,UAAU,EACVC,cAAe9B,EACf+B,iBAAkB,CACdC,oBAAqB,mBAI7B,OACI,sBAAKC,UAAU,YAAf,UACI,oBAAIA,UAAU,GAAd,+BACA,uBAAOA,UAAU,qBAAqBC,KAAK,OAAOC,OAAO,OAAOC,SAAU,SAAClB,GAAD,OAAKD,EAAOC,MAElFf,EAAW,wBAAQ8B,UAAY1B,EAAe,gBAAT,SAA0B8B,QAxD5D,WACX7B,GAAS,GACTE,EAAMe,KAAK,UAAU,CAACpB,KAAKA,IAAOO,MAAK,SAAAC,GACnCC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,EAAIG,KAAKX,KAAKQ,EAAIG,KAAKsB,aAAazB,EAAIG,KAAKuB,UACtD1B,EAAIG,KAAKuB,WACRtC,ECxCe,CAC3BiC,KAAM,YACNM,SDsC8B,IAClBvC,ECrCK,SAACF,GAAD,MAAS,CAC1BmC,KAAM,WACNM,QAASzC,GDmCY0C,CAAQC,KAAKC,MAAM9B,EAAIG,KAAKuB,aAEzC,IAAIvB,EAAM,CACNX,KAAMQ,EAAIG,KAAKX,KACfiC,aAAczB,EAAIG,KAAKsB,cAE3B5B,EAAMe,KAAK,YAAYT,EAAK,CAAC4B,aAAc,SAAShC,MAAK,SAAAiC,GACrD/B,QAAQC,IAAI,wBACZD,QAAQC,IAAI8B,GACZ,IAAIC,EAAOC,KAAKC,MAAM,eACtBC,IAASJ,EAAS7B,KAAK8B,GACvBI,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,0BACRzC,MAAK,WACJ0C,OAAOC,SAASC,eAErBC,OAAM,WACLP,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,4BACRzC,MAAK,WACJ0C,OAAOC,SAASC,kBAGzBC,OAAM,WACLP,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,4BACRzC,MAAK,WACJ0C,OAAOC,SAASC,gBAmBL,SAAqE,8BAAIjD,EAAM,mBAAGmD,MAAM,iCAAoC,GAAvD,eAA+E,GAG/J5D,EACI,cAAC,IAAD,CACI6D,QAAShC,IAGf,W,OEpFHiC,MAVf,WACE,OACE,qBAAK3B,UAAU,OAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,IAAIC,UAAWC,S,QCI1BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvD,MAAK,YAAkD,IAA/CwD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,0DCPRO,EAAc,CAChB3E,cAAc,EACdE,YAAa,IAmBF0E,EAhBG,WAA+B,IAA9B7E,EAA6B,uDAAvB4E,EAAcE,EAAS,uCAC5C,OAAOA,EAAOzC,MACV,IAAK,YACD,kCACOrC,GADP,IAEIC,aAAc6E,EAAOnC,UAE7B,IAAK,WACD,OAAO,2BACA3C,GADP,IAEIG,YAAa2E,EAAOnC,UAE5B,QACI,OAAO3C,ICdb+E,EAAc,CAChBC,IAAK,OACLC,YACAC,UAAW,GACXC,UAAW,CAAC,SAGVC,EAAcC,YAAgB,CAChCnF,KAAMoF,IAGKC,cAAeR,EAAcK,GCVtCI,EAAY,CAACC,KAENC,EAAQC,YAAYP,EAAYQ,IAAe,WAAf,EAAmBJ,IAEzCK,YAAaH,GCApCI,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACA,cAAC,IAAD,UACE,cAAC,EAAD,QAGFM,SAASC,eAAe,SAM1B7B,K","file":"static/js/main.5e382ee8.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance=axios.create({\n    baseURL: \"https://convertbase64-backend.herokuapp.com\"\n})\n\nexport default instance\n\n\n//http://localhost:8000\n//https://convertbase64-backend.herokuapp.com\n\n//react-scripts start","import React,{useState,useEffect} from 'react'\nimport Axios from '../Axios'\nimport './Main.css'\nimport Download from 'downloadjs'\nimport Swal from 'sweetalert2'\nimport Lottie from 'react-lottie'\nimport {connect} from 'react-redux'\nimport {setClick,setJson} from './redux/Json/Json-action'\nimport File from './File.json'\n\nfunction Main({dispatch,currentJson,currentClick}) {\n    const [showButton,setShowButton]=useState(false)\n    const [name,setName] = useState('')\n    const [click,SetClick] = useState(false)\n\n    useEffect(()=>{\n        Axios.get(\"/initial\").then(res=>{\n            console.log(res.data)\n        })\n    },[])\n\n    const upload=async (e)=>{\n        e.preventDefault();\n        const files = e.target.files;\n        console.log(files[0])\n        const data = new FormData();\n        data.append(\"file\",files[0])\n        Axios.post(\"/upload\",data).then(res=>{\n            console.log(res.data.message)\n            setShowButton(true)\n            setName(res.data.name)\n        })\n    }\n    \n    const update = ()=>{\n        SetClick(true)\n        Axios.post(\"/update\",{name:name}).then(res=>{\n            console.log(\"Done!\")\n            console.log(res.data.name,res.data.JsonFileName,res.data.JsonData)\n            if(res.data.JsonData){\n                dispatch(setClick(true))\n                dispatch(setJson(JSON.parse(res.data.JsonData)))\n            }\n            let data ={\n                name: res.data.name,\n                JsonFileName: res.data.JsonFileName\n            }\n            Axios.post(\"/compress\",data,{responseType: 'blob'}).then(response => {\n                console.log(\"got al files in api \");\n                console.log(response)\n                var Name = Date.now()+'-output.json'\n                Download(response.data,Name)\n                Swal.fire({\n                    icon: 'success',\n                    title: 'Successfully updated!',\n                }).then(()=>{\n                    window.location.reload()\n                })\n            }).catch(()=>{\n                Swal.fire({\n                    icon: 'warning',\n                    title: 'Something went wrong...'\n                }).then(()=>{\n                    window.location.reload()\n                })\n            })\n        }).catch(()=>{\n            Swal.fire({\n                icon: 'warning',\n                title: 'Something went wrong...'\n            }).then(()=>{\n                window.location.reload()\n            })\n        })\n    }\n\n    const defaultOptions = {\n        loop: true,\n        autoplay: true,\n        animationData: currentJson,\n        rendererSettings: {\n            preserveAspectRatio: \"xMidYMid slice\"\n          }    \n    }\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"\">Upload Zip Folder</h1>\n            <input className=\"custom-file-upload\" type=\"file\" accept=\".zip\" onChange={(e)=>upload(e)} />\n            {\n                showButton?<button className={!click?\"button\":\"disableButton\"} onClick={update}><b>{click?<i class=\"fa fa-circle-o-notch fa-spin\"></i>:''} Update</b></button>:\"\"\n            }\n            {\n                currentClick?(\n                    <Lottie\n                        options={defaultOptions}\n                        \n                        />\n                ):null\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps=(state)=>({\n    currentClick: state.user.currentClick,\n    currentJson: state.user.currentJson\n})\n\nexport default connect(mapStateToProps,null)(Main)\n","export const setClick=(user)=>({\n    type: 'SET_CLICK',\n    payload: user\n})\nexport const setJson=(user)=>({\n    type: 'SET_JSON',\n    payload: user\n})","import { Switch,Route } from 'react-router';\nimport Main from './components/Main'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"Main\">\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const Initial_State={\n    currentClick: false,\n    currentJson: {}\n}\n\nconst userReducer=(state=Initial_State,action)=>{\n    switch(action.type){\n        case 'SET_CLICK':\n            return{\n                ...state,\n                currentClick: action.payload\n            }\n        case 'SET_JSON':\n            return {\n                ...state,\n                currentJson: action.payload\n            }\n        default:\n            return state\n    }\n}\nexport default userReducer","import {combineReducers} from 'redux'\nimport {persistReducer} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport JsonReducer from './Json/Json-reducer'\nconst persistConfig={\n    key: 'root',\n    storage,\n    blacklist: [] ,\n    whitelist: ['user']\n}\n\nconst rootReducer = combineReducers({\n    user: JsonReducer,\n})\n\nexport default persistReducer(persistConfig,rootReducer)","import {createStore,applyMiddleware} from 'redux'\nimport logger from 'redux-logger'\nimport {persistStore} from 'redux-persist'\nimport rootReducer from './root-reducer'\n\nconst middlewares=[logger]\n\nexport const store = createStore(rootReducer,applyMiddleware(...middlewares))\n\nexport const persistor=persistStore(store)\n\nexport default {store,persistor}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport {store,persistor} from './components/redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}