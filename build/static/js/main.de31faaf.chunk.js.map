{"version":3,"sources":["Axios.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Main","useState","showButton","setShowButton","name","setName","click","setClick","upload","e","a","preventDefault","files","target","console","log","data","FormData","append","Axios","post","then","res","message","className","type","accept","onChange","onClick","JsonFileName","responseType","response","Name","Date","now","Download","Swal","fire","icon","title","window","location","reload","catch","class","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kPAMeA,E,OAJAC,EAAMC,OAAO,CACxBC,QAAS,0B,iDCqEEC,MAlEf,WACI,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAuBF,mBAAS,IAAhC,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAyBJ,oBAAS,GAAlC,mBAAOK,EAAP,KAAaC,EAAb,KACMC,EAAM,uCAAC,WAAOC,GAAP,iBAAAC,EAAA,sDACTD,EAAEE,iBACIC,EAAQH,EAAEI,OAAOD,MACvBE,QAAQC,IAAIH,EAAM,KACZI,EAAO,IAAIC,UACZC,OAAO,OAAON,EAAM,IACzBO,EAAMC,KAAK,UAAUJ,GAAMK,MAAK,SAAAC,GAC5BR,QAAQC,IAAIO,EAAIN,KAAKO,SACrBpB,GAAc,GACdE,EAAQiB,EAAIN,KAAKZ,SATZ,2CAAD,sDAmDZ,OACI,sBAAKoB,UAAU,YAAf,UACI,oBAAIA,UAAU,GAAd,+BACA,uBAAOA,UAAU,qBAAqBC,KAAK,OAAOC,OAAO,OAAOC,SAAU,SAAClB,GAAD,OAAKD,EAAOC,MAElFP,EAAW,wBAAQsB,UAAYlB,EAAe,gBAAT,SAA0BsB,QA3C5D,WACXrB,GAAS,GACTY,EAAMC,KAAK,UAAU,CAAChB,KAAKA,IAAOiB,MAAK,SAAAC,GACnCR,QAAQC,IAAI,SACZD,QAAQC,IAAIO,EAAIN,KAAKZ,KAAKkB,EAAIN,KAAKa,cACnC,IAAIb,EAAM,CACNZ,KAAMkB,EAAIN,KAAKZ,KACfyB,aAAcP,EAAIN,KAAKa,cAE3BV,EAAMC,KAAK,YAAYJ,EAAK,CAACc,aAAc,SAAST,MAAK,SAAAU,GACrDjB,QAAQC,IAAI,wBACZD,QAAQC,IAAIgB,GACZ,IAAIC,EAAOC,KAAKC,MAAM,cACtBC,IAASJ,EAASf,KAAKgB,GACvBI,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,0BACRlB,MAAK,WACJmB,OAAOC,SAASC,eAErBC,OAAM,WACLP,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,4BACRlB,MAAK,WACJmB,OAAOC,SAASC,kBAGzBC,OAAM,WACLP,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,4BACRlB,MAAK,WACJmB,OAAOC,SAASC,gBAUL,SAAqE,8BAAIpC,EAAM,mBAAGsC,MAAM,iCAAoC,GAAvD,eAA+E,OCpDhKC,MAVf,WACE,OACE,8BACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhD,S,QCI1BiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.de31faaf.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance=axios.create({\n    baseURL: \"http://localhost:8000\"\n})\n\nexport default instance\n\n\n//http://localhost:8000\n//https://converterbase64.herokuapp.com","import React,{useState,useEffect} from 'react'\nimport Axios from '../Axios'\nimport './Main.css'\nimport Download from 'downloadjs'\nimport Swal from 'sweetalert2'\n\nfunction Main() {\n    const [showButton,setShowButton]=useState(false)\n    const [name,setName] = useState('')\n    const [click,setClick] = useState(false)\n    const upload=async (e)=>{\n        e.preventDefault();\n        const files = e.target.files;\n        console.log(files[0])\n        const data = new FormData();\n        data.append(\"file\",files[0])\n        Axios.post(\"/upload\",data).then(res=>{\n            console.log(res.data.message)\n            setShowButton(true)\n            setName(res.data.name)\n        })\n    }\n    \n    const update = ()=>{\n        setClick(true)\n        Axios.post(\"/update\",{name:name}).then(res=>{\n            console.log(\"Done!\")\n            console.log(res.data.name,res.data.JsonFileName)\n            let data ={\n                name: res.data.name,\n                JsonFileName: res.data.JsonFileName\n            }\n            Axios.post(\"/compress\",data,{responseType: 'blob'}).then(response => {\n                console.log(\"got al files in api \");\n                console.log(response)\n                var Name = Date.now()+'-output.zip'\n                Download(response.data,Name)\n                Swal.fire({\n                    icon: 'success',\n                    title: 'Successfully updated!',\n                }).then(()=>{\n                    window.location.reload()\n                })\n            }).catch(()=>{\n                Swal.fire({\n                    icon: 'warning',\n                    title: 'Something went wrong...'\n                }).then(()=>{\n                    window.location.reload()\n                })\n            })\n        }).catch(()=>{\n            Swal.fire({\n                icon: 'warning',\n                title: 'Something went wrong...'\n            }).then(()=>{\n                window.location.reload()\n            })\n        })\n    }\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"\">Upload Zip Folder</h1>\n            <input className=\"custom-file-upload\" type=\"file\" accept=\".zip\" onChange={(e)=>upload(e)} />\n            {\n                showButton?<button className={!click?\"button\":\"disableButton\"} onClick={update}><b>{click?<i class=\"fa fa-circle-o-notch fa-spin\"></i>:''} Update</b></button>:\"\"\n            }\n        </div>\n    )\n}\n\nexport default Main\n","import { Switch,Route } from 'react-router';\nimport Main from './components/Main'\n\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}